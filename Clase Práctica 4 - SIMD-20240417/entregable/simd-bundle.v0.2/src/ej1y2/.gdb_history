help x
x/4xw &count_hands 
x/4dw &count_hands 
q
b four_of_a_kind_asm
r
x/4tb &shuffle_h1
make tester
q
main tester
make tester
file tester
b four_of_a_kind_asm
r
x/16tb $count_hands 
x/16tb $count_hands 
help x
x/16xb $count_hands 
x/16xb $shuffle_h1 
q
q
file 
file checkpoint2_asm.o
print shuffle_mask 
print *(uint8_t*0) shuffle_mask 
print *(uint8_t*) shuffle_mask 
print *(uint16_t*) shuffle_mask 
print *(uint8_t*) $shuffle_mask 
p/x shuffle_mask 
p/xb shuffle_mask 
help print 
p {uint8_t} shuffle_mask 
print {uint8_t} shuffle_mask 
file tester
info breakpoints 
b four_of_a_kind_asm
r
x/1tb $count_hands 
file tester
b four_of_a_kind_asm
r
print $xmm8
help x
x/1tb $count_hands 
x/1tb $wipe_suit 
x/4tb $wipe_suit 
x/4tb wipe_suit 
x/4tb $wipe_suit 
x/ $wipe_suit 
x/ $shuffle_h1
q
b four_of_a_kind_asm
r
x/16tb $count_hands
x/16tb $wipe_suit
ni
x/16tb $wipe_suit
q
b four_of_a_kind_asm
r
ni
q
b four_of_a_kind_asm
r
x/1tb $wipe_suit 
x/ $rsp
x/ $rax
x/ $eax
x/tb $eax
x/tw $eax
x/xw $eax
x/16xb $count_hands
x/16xb count_hands
x/16xb $count_hands
x/16tb $count_hands
x/16cb $count_hands
x/16cb &count_hands
x/16tb &count_hands
x/16hb &count_hands
x/16db &count_hands
x/16tb &wipe_suit
x/16db &wipe_suit
q
b dot_product_asm[.ciclo]
b dot_product_asm[ciclo]
b dot_product_asm
r
ni
b .sum
b dot_product:.sum
b dot_product_asm:sum
b dot_product_asm:.sum
b dot_product_asm:49
c
ni
exit
info breakpoints 
b four_of_a_kind_asm
r
ni
r
x/16tb &wipe_suit 
q
q
b four_of_a_kind_asm
r
ni
ni
ni
ni
ni
ni
ni
ni
ni
ni
ni
ni
q
q
b four_of_a_kind_asm
run
ni
print $xmm0
print $xmm0.v16_int8
ni
print $xmm1.v16_int8
ni
ni
print $xmm1.v16_int8
print $xmm1.v4_int32
ni
c
c
ni
ni
ni
ni
q
b four_of_a_kind_asm
run
ni
q
info breakpoints
b four_of_a_kind_asm
b tester.o:191
b tester:191
b tester.c:191
run
info breakpoints 
c
ni
print $ecx
b four_of_a_kind_asm[ciclo]
b four_of_a_kind_asm[.ciclo]
b four_of_a_kind_asm:31
c
c
c
info brekpoints
inof brakpoints
info  breakpoints
delete 2
info  breakpoints
delete 3
b four_of_a_kind_asm:33
si
ni
si
q
b four_of_a_kind_asm:33
delete 1
info breakpoints 
b .debug
b four_of_a_kind_asm:debug
b four_of_a_kind_asm[debug]
b four_of_a_kind_asm:.debug
b .ciclo
b four_of_a_kind_asm
info breakpoints 
r
ni
b four_of_a_kind_asm.debug
b four_of_a_kind_asm.ciclo
c
p $xmm1
x/16tb &count_hands 
p $xmm0
p $xmm0.v16_int8 
c
q
b four_of_a_kind_asm:ciclo
b four_of_a_kind_asm:33
r
ni
ni
p $xmm0
p $xmm0.v8_int16 
p $xmm7.v8_int16 
p $xmm6.v8_int16 
p $xmm6.v8_int8 
p $xmm6.v16_int8 
p $xmm0.v16_int8 
p $xmm1.v16_int8 
p $xmm0.v16_int8 
p $xmm1.v16_int8 
p $xmm7.v16_int8 
x/16tb &shuffle_h1
make tester
make main
q
q
b four_of_a_kind_asm:39
r
info breakpoints 
ni
p $xmm1.v16_int8 
p $xmm1.v4_int32 
ni
p $xmm1.v4_int32 
p $xmm1.v16_int8 
ni
p $xmm1.v16_int8 
ni
p $xmm1.v16_int8 
ni
p $xmm1.v16_int8 
ni
c
b four_of_a_kind_asm[ciclo]
b four_of_a_kind_asm:.ciclo
break four_of_a_kind_asm:38
break checkpoint2.asm:38
delete 1
delete 2
info breakpoints 
c
p $rcx
c
p $rcx
q
b checkpoint2.asm:38
delete 2
r
p $rcx
c
p $rcx
p $xmm0.v16_int8 
ni
p $xmm0.v16_int8 
p $xmm1.v16_int8 
ni
ni
p $xmm1.v16_int8 
p $xmm5.v16_int8 
q
